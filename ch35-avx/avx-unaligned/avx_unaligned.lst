     1                                  ; avx_unaligned.asm
     2                                  extern printf
     3                                  
     4                                  section .data
     5 00000000 CDCC8C3F                	spvector1	dd	1.1
     6 00000004 66660640                			dd	2.1
     7 00000008 66664640                			dd	3.1
     8 0000000C 33338340                			dd	4.1
     9 00000010 3333A340                			dd	5.1
    10 00000014 3333C340                			dd	6.1
    11 00000018 3333E340                			dd	7.1
    12 0000001C 9A990141                			dd	8.1
    13                                  
    14 00000020 9A99993F                	spvector2	dd	1.2
    15 00000024 CDCC0C40                			dd	2.2
    16 00000028 CDCC4C40                			dd	3.2
    17 0000002C 66668640                			dd	4.2
    18 00000030 6666A640                			dd	5.2
    19 00000034 6666C640                			dd	6.2
    20 00000038 6666E640                			dd	7.2
    21 0000003C 33330341                			dd	8.2
    22                                  	
    23 00000040 9A9999999999F13F        	dpvector1	dq	1.1
    24 00000048 9A99999999990140        			dq	2.2
    25 00000050 6666666666660A40        			dq	3.3
    26 00000058 9A99999999991140        			dq	4.4
    27                                  
    28 00000060 0000000000001640        	dpvector2	dq	5.5
    29 00000068 6666666666661A40        			dq	6.6
    30 00000070 CDCCCCCCCCCC1E40        			dq	7.7
    31 00000078 9A99999999992140        			dq	8.8
    32                                  
    33 00000080 53696E676C65205072-     	fmt1	db	"Single Precision Vector 1:",10,0
    33 00000089 65636973696F6E2056-
    33 00000092 6563746F7220313A0A-
    33 0000009B 00                 
    34 0000009C 0A53696E676C652050-     	fmt2	db	10,"Single Precision Vector 2:",10,0
    34 000000A5 7265636973696F6E20-
    34 000000AE 566563746F7220323A-
    34 000000B7 0A00               
    35 000000B9 0A53756D206F662053-     	fmt3	db	10,"Sum of Single Precision Vector 1 and Vector 2:",10,0
    35 000000C2 696E676C6520507265-
    35 000000CB 636973696F6E205665-
    35 000000D4 63746F72203120616E-
    35 000000DD 6420566563746F7220-
    35 000000E6 323A0A00           
    36 000000EA 0A446F75626C652050-     	fmt4	db	10,"Double Precision Vector 1:",10,0
    36 000000F3 7265636973696F6E20-
    36 000000FC 566563746F7220313A-
    36 00000105 0A00               
    37 00000107 0A446F75626C652050-     	fmt5	db	10,"Double Precision Vector 2:",10,0
    37 00000110 7265636973696F6E20-
    37 00000119 566563746F7220323A-
    37 00000122 0A00               
    38 00000124 0A53756D206F662044-     	fmt6	db	10,"Sum of Double Precision Vector 1 and Vector 2:",10,0
    38 0000012D 6F75626C6520507265-
    38 00000136 636973696F6E205665-
    38 0000013F 63746F72203120616E-
    38 00000148 6420566563746F7220-
    38 00000151 323A0A00           
    39                                  
    40                                  section .bss
    41 00000000 <res 20h>               	spvector_res	resd	8
    42 00000020 <res 20h>               	dpvector_res	resq	4
    43                                  
    44                                  section .text
    45                                  	global main
    46                                  main:
    47 00000000 55                      	push	rbp
    48 00000001 4889E5                  	mov	rbp, rsp
    49                                  
    50                                  	; SINGLE PRECISION FLOATING POINT VECTORS
    51                                  	; load vector1 in register ymm
    52 00000004 C5FC100425-             	vmovups		ymm0, [spvector1]
    52 00000009 [00000000]         
    53                                  	; extract ymm0
    54 0000000D C4E37D19C200            	vextractf128	xmm2, ymm0, 0
    55                                  	; ymm0's first part
    56 00000013 C4E37D19C201            	vextractf128	xmm2, ymm0, 1		; ymm0's second part
    57                                  	; load vector 2 into ymm1
    58 00000019 C5FC100C25-             	vmovups		ymm1, [spvector2]	; extract ymm1
    58 0000001E [20000000]         
    59 00000022 C4E37D19CA00            	vextractf128	xmm2, ymm1, 0
    60 00000028 C4E37D19CA01            	vextractf128	xmm2, ymm1, 1
    61                                  	; added 2 single precision floating-pt vectors
    62 0000002E C5FC58D1                	vaddps		ymm2, ymm0, ymm1
    63 00000032 C5FC111425-             	vmovups		[spvector_res], ymm2
    63 00000037 [00000000]         
    64                                  	; print vectors
    65 0000003B 48BF-                   	mov	rdi, fmt1
    65 0000003D [8000000000000000] 
    66 00000045 E8(00000000)            	call	printf
    67 0000004A 48BE-                   	mov	rsi, spvector1
    67 0000004C [0000000000000000] 
    68 00000054 E8D9000000              	call	printspfpv
    69 00000059 48BF-                   	mov	rdi, fmt2
    69 0000005B [9C00000000000000] 
    70 00000063 E8(00000000)            	call	printf
    71 00000068 48BE-                   	mov	rsi, spvector2
    71 0000006A [2000000000000000] 
    72 00000072 E8BB000000              	call	printspfpv
    73 00000077 48BF-                   	mov	rdi, fmt3
    73 00000079 [B900000000000000] 
    74 00000081 E8(00000000)            	call	printf
    75 00000086 48BE-                   	mov	rsi, spvector_res
    75 00000088 [0000000000000000] 
    76 00000090 E89D000000              	call	printspfpv
    77                                  
    78                                  	; DOUBLE PRECISION FLOATING POINT VECTORS
    79                                  	; load vector 1 into register ymm0
    80 00000095 C5FC100425-             	vmovups		ymm0, [dpvector1]
    80 0000009A [40000000]         
    81 0000009E 48BF-                   	mov		rdi, fmt4
    81 000000A0 [EA00000000000000] 
    82                                  	; extract ymm0
    83 000000A8 C4E37D19C200            	vextractf128	xmm2, ymm0, 0		; ymm0's first part
    84 000000AE C4E37D19C201            	vextractf128	xmm2, ymm0, 1		; ymm0's second part
    85                                  	; load vector 2 into register ymm1
    86 000000B4 C5FC100C25-             	vmovups		ymm1, [dpvector2]	
    86 000000B9 [60000000]         
    87                                  	; extract ymm1
    88 000000BD C4E37D19CA00            	vextractf128	xmm2, ymm1, 0
    89 000000C3 C4E37D19CA01            	vextractf128	xmm2, ymm1, 1
    90                                  	; add 2 double precision floating-pt vectors
    91 000000C9 C5FD58D1                	vaddpd		ymm2, ymm0, ymm1
    92 000000CD C5FD111425-             	vmovupd		[dpvector_res], ymm2
    92 000000D2 [20000000]         
    93                                  	; print vectors
    94 000000D6 48BF-                   	mov	rdi, fmt4
    94 000000D8 [EA00000000000000] 
    95 000000E0 E8(00000000)            	call	printf
    96 000000E5 48BE-                   	mov	rsi, dpvector1
    96 000000E7 [4000000000000000] 
    97 000000EF E88B000000              	call	printdpfpv
    98 000000F4 48BF-                   	mov	rdi, fmt5
    98 000000F6 [0701000000000000] 
    99 000000FE E8(00000000)            	call	printf
   100 00000103 48BE-                   	mov	rsi, dpvector2
   100 00000105 [6000000000000000] 
   101 0000010D E86D000000              	call	printdpfpv
   102 00000112 48BF-                   	mov	rdi, fmt6
   102 00000114 [2401000000000000] 
   103 0000011C E8(00000000)            	call	printf
   104 00000121 48BE-                   	mov	rsi, dpvector_res
   104 00000123 [2000000000000000] 
   105 0000012B E84F000000              	call	printdpfpv
   106                                  
   107 00000130 C9                      	leave
   108 00000131 C3                      	ret
   109                                  
   110                                  printspfpv:
   111                                  section .data
   112 00000155 0A00                    	.NL	db	10,0
   113 00000157 252E31662C202000        	.fmt1	db	"%.1f,  ",0
   114                                  section .text
   115 00000132 55                      	push	rbp
   116 00000133 4889E5                  	mov	rbp, rsp
   117                                  
   118 00000136 51                      	push	rcx
   119 00000137 53                      	push	rbx
   120 00000138 B908000000              	mov	rcx, 8
   121 0000013D BB00000000              	mov	rbx, 0
   122 00000142 B801000000              	mov	rax, 1
   123                                  
   124                                  	.loop:
   125 00000147 F30F10041E              		movss		xmm0, [rsi + rbx]
   126 0000014C F30F5AC0                		cvtss2sd	xmm0, xmm0
   127 00000150 48BF-                   		mov		rdi, .fmt1
   127 00000152 [5701000000000000] 
   128 0000015A 56                      		push		rsi
   129 0000015B 51                      		push		rcx
   130 0000015C E8(00000000)            		call		printf
   131 00000161 59                      		pop		rcx
   132 00000162 5E                      		pop		rsi
   133 00000163 4883C304                		add		rbx, 4
   134 00000167 E2DE                    		loop		.loop
   135 00000169 4831C0                  		xor		rax, rax
   136 0000016C 48BF-                   		mov		rdi, .NL
   136 0000016E [5501000000000000] 
   137 00000176 E8(00000000)            		call		printf
   138 0000017B 5B                      		pop		rbx
   139 0000017C 59                      		pop		rcx
   140                                  
   141 0000017D C9                      	leave
   142 0000017E C3                      	ret
   143                                  
   144                                  printdpfpv:
   145                                  section .data
   146 0000015F 0A00                    	.NL	db	10,0
   147 00000161 252E31662C20252E31-     	.fmt	db	"%.1f, %.1f, %.1f, %.1f",0
   147 0000016A 662C20252E31662C20-
   147 00000173 252E316600         
   148                                  section .text
   149 0000017F 55                      	push	rbp
   150 00000180 4889E5                  	mov	rbp, rsp
   151                                  
   152 00000183 F20F1006                	movsd	xmm0, [rsi]
   153 00000187 F20F104E08              	movsd	xmm1, [rsi + 8]
   154 0000018C F20F105610              	movsd	xmm2, [rsi + 16]
   155 00000191 F20F105E18              	movsd	xmm3, [rsi + 24]
   156                                  
   157 00000196 48BF-                   	mov	rdi, .fmt
   157 00000198 [6101000000000000] 
   158 000001A0 B804000000              	mov	rax, 4		; four floats
   159 000001A5 E8(00000000)            	call	printf
   160 000001AA 48BF-                   	mov	rdi, .NL
   160 000001AC [5F01000000000000] 
   161 000001B4 E8(00000000)            	call	printf
   162                                  
   163 000001B9 C9                      	leave
   164 000001BA C3                      	ret
