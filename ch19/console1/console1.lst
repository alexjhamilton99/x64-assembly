     1                                  ; console.asm
     2                                  section .data
     3 00000000 48656C6C6F2C20576F-         msg1        db      "Hello, World!",10,0    
     3 00000009 726C64210A00       
     4                                      msg1len     equ     $-msg1
     5 0000000F 596F7572207475726E-         msg2        db      "Your turn: ",0
     5 00000018 3A2000             
     6                                      msg2len     equ     $-msg2
     7 0000001B 596F7520616E737765-         msg3        db      "You answered: ",0
     7 00000024 7265643A2000       
     8                                      msg3len     equ     $-msg3
     9                                      inputlen    equ     10                      ; input buffer's length
    10                                  section .bss
    11 00000000 <res Bh>                    input       resb    inputlen+1              ; provide space for ending 0
    12                                  section .text
    13                                      global main
    14                                  main:
    15 00000000 55                          push    rbp
    16 00000001 4889E5                      mov     rbp, rsp
    17                                      
    18 00000004 48BE-                       mov     rsi, msg1
    18 00000006 [0000000000000000] 
    19 0000000E BA0F000000                  mov     rdx, msg1len
    20 00000013 E852000000                  call    prints
    21 00000018 48BE-                       mov     rsi, msg2
    21 0000001A [0F00000000000000] 
    22 00000022 BA0C000000                  mov     rdx, msg2len
    23 00000027 E83E000000                  call    prints
    24                                      
    25 0000002C 48BE-                       mov     rsi, input      ; input buffer address
    25 0000002E [0000000000000000] 
    26 00000036 BA0A000000                  mov     rdx, inputlen
    27 0000003B E83C000000                  call    reads           ; wait for input
    28 00000040 48BE-                       mov     rsi, msg3
    28 00000042 [1B00000000000000] 
    29 0000004A BA0F000000                  mov     rdx, msg3len
    30 0000004F E816000000                  call    prints
    31 00000054 48BE-                       mov     rsi, input
    31 00000056 [0000000000000000] 
    32 0000005E BA0A000000                  mov     rdx, inputlen
    33 00000063 E802000000                  call    prints          ; print the input buffer
    34                                      
    35 00000068 C9                          leave
    36 00000069 C3                          ret
    37                                      
    38                                  prints:
    39 0000006A 55                          push    rbp
    40 0000006B 4889E5                      mov     rbp, rsp
    41                                      
    42                                      ; rsi contains the string's address
    43                                      ; rdx contains the string's length          
    44 0000006E B801000000                  mov     rax, 1          ; 1 = write
    45 00000073 BF01000000                  mov     rdi, 1          ; 1 = stdout
    46 00000078 0F05                        syscall
    47                                      
    48 0000007A C9                          leave
    49 0000007B C3                          ret
    50                                  
    51                                  reads:
    52 0000007C 55                          push    rbp
    53 0000007D 4889E5                      mov     rbp, rsp
    54                                      
    55                                      ; rsi contains the inputbuffer's address
    56                                      ; rdi contains the inputbuffer's length
    57 00000080 B800000000                  mov     rax, 0          ; 0 = read
    58 00000085 BF01000000                  mov     rdi, 1          ; 1 = stdin
    59 0000008A 0F05                        syscall
    60                                      
    61 0000008C C9                          leave
    62 0000008D C3                          ret
