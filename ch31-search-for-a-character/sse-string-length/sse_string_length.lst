     1                                  ; sse_string_length.asm
     2                                  extern printf
     3                                  
     4                                  section .data
     5                                  	; template	0123456789abcdef0123456789abcdef0123456789abcd   e
     6                                  	; template	1234567890123456789012345678901234567890123456   7
     7 00000000 54686520717569636B-     	string1		db	"The quick brown fox jumps over the lazy river.",0
     7 00000009 2062726F776E20666F-
     7 00000012 78206A756D7073206F-
     7 0000001B 76657220746865206C-
     7 00000024 617A79207269766572-
     7 0000002D 2E00               
     8 0000002F 54686973206973206F-     	fmt1		db	"This is our string: %s",10,0
     8 00000038 757220737472696E67-
     8 00000041 3A2025730A00       
     9 00000047 4F757220737472696E-     	fmt2		db	"Our string is %d characters long.",10,0
     9 00000050 672069732025642063-
     9 00000059 686172616374657273-
     9 00000062 206C6F6E672E0A00   
    10                                  section .bss
    11                                  section .text
    12                                  	global main
    13                                  main:
    14 00000000 55                      	push	rbp
    15 00000001 4889E5                  	mov	rbp, rsp
    16                                  
    17 00000004 48BF-                   	mov	rdi, fmt1
    17 00000006 [2F00000000000000] 
    18 0000000E 48BE-                   	mov	rsi, string1
    18 00000010 [0000000000000000] 
    19 00000018 4831C0                  	xor 	rax, rax
    20 0000001B E8(00000000)            	call	printf
    21                                  
    22 00000020 48BF-                   	mov	rdi, string1
    22 00000022 [0000000000000000] 
    23 0000002A E817000000              	call	pstrlen
    24                                  
    25 0000002F 48BF-                   	mov	rdi, fmt2
    25 00000031 [4700000000000000] 
    26 00000039 4889C6                  	mov	rsi, rax
    27 0000003C 4831C0                  	xor	rax, rax
    28 0000003F E8(00000000)            	call	printf
    29                                  
    30 00000044 C9                      	leave
    31 00000045 C3                      	ret
    32                                  
    33                                  ; function that computes a string's length
    34                                  pstrlen:
    35 00000046 55                      	push	rbp
    36 00000047 4889E5                  	mov	rbp, rsp
    37                                  
    38 0000004A 48C7C0F0FFFFFF          	mov	rax, -16	; avoid changing ZF later
    39 00000051 660FEFC0                	pxor	xmm0, xmm0	; 0 = string's end
    40                                  
    41                                  	.not_found:
    42 00000055 4883C010                		add		rax, 16				; avoid changing ZF later
    43 00000059 660F3A63040708          		pcmpistri	xmm0, [rdi + rax], 00001000b	; 'equal each'
    44 00000060 75F3                    		jnz		.not_found			; 0 found?
    45 00000062 4801C8                  		add		rax, rcx			; rcx contains 0's index
    46 00000065 48FFC0                  		inc		rax				; correct for start's index 0
    47                                  
    48 00000068 C9                      	leave
    49 00000069 C3                      	ret
