     1                                  ; sse_string2_imp.asm
     2                                  ; compare implicit-lengthed strings
     3                                  extern printf
     4                                  
     5                                  section .data
     6 00000000 74686520717569636B-     	string1	db	"the quick brown fox jumps over the lazy river",10,0
     6 00000009 2062726F776E20666F-
     6 00000012 78206A756D7073206F-
     6 0000001B 76657220746865206C-
     6 00000024 617A79207269766572-
     6 0000002D 0A00               
     7 0000002F 74686520717569636B-     	string2	db	"the quick brown fox jumps over the lazy river",10,0
     7 00000038 2062726F776E20666F-
     7 00000041 78206A756D7073206F-
     7 0000004A 76657220746865206C-
     7 00000053 617A79207269766572-
     7 0000005C 0A00               
     8 0000005E 74686520717569636B-     	string3	db	"the quick brown fox jumps over the lazy dog",10,0
     8 00000067 2062726F776E20666F-
     8 00000070 78206A756D7073206F-
     8 00000079 76657220746865206C-
     8 00000082 617A7920646F670A00 
     9 0000008B 537472696E67732031-     	fmt1	db	"Strings 1 and 2 are equal.",10,0
     9 00000094 20616E642032206172-
     9 0000009D 6520657175616C2E0A-
     9 000000A6 00                 
    10 000000A7 537472696E67732031-     	fmt11	db	"Strings 1 and 2 differ at position %i.",10,0
    10 000000B0 20616E642032206469-
    10 000000B9 666665722061742070-
    10 000000C2 6F736974696F6E2025-
    10 000000CB 692E0A00           
    11 000000CF 537472696E67732032-     	fmt2	db	"Strings 2 and 3 are equal.",10,0
    11 000000D8 20616E642033206172-
    11 000000E1 6520657175616C2E0A-
    11 000000EA 00                 
    12 000000EB 537472696E67732032-     	fmt22	db	"Strings 2 and 3 differ at position %i.",10,0
    12 000000F4 20616E642033206469-
    12 000000FD 666665722061742070-
    12 00000106 6F736974696F6E2025-
    12 0000010F 692E0A00           
    13                                  section .bss
    14                                  section .text
    15                                  	global main
    16                                  main:
    17 00000000 55                      	push	rbp
    18 00000001 4889E5                  	mov	rbp, rsp
    19                                  
    20                                  	; print strings
    21 00000004 48BF-                   	mov	rdi, string1
    21 00000006 [0000000000000000] 
    22 0000000E 4831C0                  	xor	rax, rax
    23 00000011 E8(00000000)            	call	printf
    24 00000016 48BF-                   	mov	rdi, string2
    24 00000018 [2F00000000000000] 
    25 00000020 4831C0                  	xor	rax, rax
    26 00000023 E8(00000000)            	call	printf
    27 00000028 48BF-                   	mov	rdi, string3
    27 0000002A [5E00000000000000] 
    28 00000032 4831C0                  	xor	rax, rax
    29 00000035 E8(00000000)            	call	printf
    30                                  
    31                                  	; compare strings 1 and 2
    32 0000003A 48BF-                   	mov	rdi, string1
    32 0000003C [0000000000000000] 
    33 00000044 48BE-                   	mov	rsi, string2
    33 00000046 [2F00000000000000] 
    34 0000004E E865000000              	call	pstrcmp
    35 00000053 48BF-                   	mov	rdi, fmt1
    35 00000055 [8B00000000000000] 
    36 0000005D 4883F800                	cmp	rax, 0
    37 00000061 740A                    	je	eql1			; the strings are equal
    38 00000063 48BF-                   	mov	rdi, fmt11		; the strings are unequal
    38 00000065 [A700000000000000] 
    39                                  
    40                                  	eql1:
    41 0000006D 4889C6                  		mov	rsi, rax
    42 00000070 4831C0                  		xor	rax, rax
    43 00000073 E8(00000000)            		call	printf
    44                                  
    45                                  	; compare strings 2 and 3
    46 00000078 48BF-                   	mov	rdi, string2
    46 0000007A [2F00000000000000] 
    47 00000082 48BE-                   	mov	rsi, string3
    47 00000084 [5E00000000000000] 
    48 0000008C E827000000              	call	pstrcmp
    49 00000091 48BF-                   	mov	rdi, fmt2
    49 00000093 [CF00000000000000] 
    50 0000009B 4883F800                	cmp	rax, 0
    51 0000009F 740A                    	je	eql2		; strings are equal
    52 000000A1 48BF-                   	mov	rdi, fmt22	; strings are unequa
    52 000000A3 [EB00000000000000] 
    53                                  
    54                                  	eql2:
    55 000000AB 4889C6                  		mov	rsi, rax
    56 000000AE 4831C0                  		xor	rax, rax
    57 000000B1 E8(00000000)            		call	printf
    58                                  
    59 000000B6 C9                      	leave
    60 000000B7 C3                      	ret
    61                                  
    62                                  ;------------------- string compare ----------------
    63                                  pstrcmp:
    64 000000B8 55                      	push	rbp
    65 000000B9 4889E5                  	mov	rbp, rsp
    66                                  
    67 000000BC 4831C0                  	xor	rax, rax
    68 000000BF 4831DB                  	xor	rbx, rbx
    69                                  
    70                                  	.loop:
    71 000000C2 F30F6F0C1F              		movdqu		xmm1, [rdi + rbx]
    72 000000C7 660F3A630C1E18          		pcmpistri	xmm1, [rsi + rbx], 0x18		; equal each | negative polarity
    73 000000CE 7208                    		jc		.differ
    74 000000D0 740F                    		jz		.equal
    75 000000D2 4883C310                		add		rbx, 16
    76 000000D6 EBEA                    		jmp		.loop
    77                                  
    78                                  	.differ:
    79 000000D8 4889D8                  		mov		rax, rbx
    80 000000DB 4801C8                  		add		rax, rcx			; differing char's position
    81 000000DE 48FFC0                  		inc		rax				; b/c idx starts at 0
    82                                  
    83                                  	.equal:
    84 000000E1 C9                      		leave
    85 000000E2 C3                      		ret
