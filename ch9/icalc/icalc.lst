     1                                  ; icalc.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 874B6B5D54DC2B00            number1     dq      12345678901234567
     5 00000008 1027000000000000            number2     dq      10000
     6 00000010 F4FFFFFFFFFFFFFF            neg_num     dq      -12
     7 00000018 546865206E756D6265-         fmt         db      "The numbers are %ld and %ld",10,0
     7 00000021 72732061726520256C-
     7 0000002A 6420616E6420256C64-
     7 00000033 0A00               
     8 00000035 257320256C640A00            fmtint      db      "%s %ld",10,0
     9 0000003D 5468652073756D2069-         sumi        db      "The sum is",0
     9 00000046 7300               
    10 00000048 546865206469666665-         difi        db      "The difference is",0
    10 00000051 72656E636520697300 
    11 0000005A 4E756D626572203120-         inci        db      "Number 1 incremented:",0
    11 00000063 696E6372656D656E74-
    11 0000006C 65643A00           
    12 00000070 4E756D626572203120-         deci        db      "Number 1 decremented:",0
    12 00000079 64656372656D656E74-
    12 00000082 65643A00           
    13 00000086 4E756D626572203120-         sali        db      "Number 1 Shift left 2 (x4):",0
    13 0000008F 5368696674206C6566-
    13 00000098 74203220287834293A-
    13 000000A1 00                 
    14 000000A2 4E756D626572203120-         sari        db      "Number 1 Shift right 2 (/4):",0
    14 000000AB 536869667420726967-
    14 000000B4 6874203220282F3429-
    14 000000BD 3A00               
    15 000000BF 4E756D626572203120-         sariex      db      "Number 1 Shift right 2 (/4) with sign extension:",0
    15 000000C8 536869667420726967-
    15 000000D1 6874203220282F3429-
    15 000000DA 207769746820736967-
    15 000000E3 6E20657874656E7369-
    15 000000EC 6F6E3A00           
    16 000000F0 5468652070726F6475-         multi       db      "The product is",0
    16 000000F9 637420697300       
    17 000000FF 54686520696E746567-         divi        db      "The integer quotient is",0
    17 00000108 65722071756F746965-
    17 00000111 6E7420697300       
    18 00000117 546865206D6F64756C-         remi        db      "The modulo is",0
    18 00000120 6F20697300         
    19                                  section .bss
    20 00000000 ????????????????            resulti     resq    1
    21 00000008 ????????????????            modulo      resq    1
    22                                  section .text
    23                                      global main
    24                                  main:
    25 00000000 55                          push    rbp
    26 00000001 4889E5                      mov     rbp,rsp
    27                                      
    28                                      ; display numbers
    29 00000004 48BF-                       mov     rdi,fmt
    29 00000006 [1800000000000000] 
    30 0000000E 488B3425[00000000]          mov     rsi,[number1]
    31 00000016 488B1425[08000000]          mov     rdx,[number2]
    32 0000001E B800000000                  mov     rax,0
    33 00000023 E8(00000000)                call printf
    34                                      
    35                                      ; addition
    36 00000028 488B0425[00000000]          mov     rax,[number1]
    37 00000030 48030425[08000000]          add     rax,[number2]
    38 00000038 48890425[00000000]          mov     [resulti],rax
    39                                      ; display result
    40 00000040 48BF-                       mov     rdi,fmtint
    40 00000042 [3500000000000000] 
    41 0000004A 48BE-                       mov     rsi,sumi
    41 0000004C [3D00000000000000] 
    42 00000054 488B1425[00000000]          mov     rdx,[resulti]
    43 0000005C B800000000                  mov     rax,0
    44 00000061 E8(00000000)                call printf
    45                                      
    46                                      ; subtraction
    47 00000066 488B0425[00000000]          mov     rax,[number1]
    48 0000006E 482B0425[08000000]          sub     rax,[number2]
    49 00000076 48890425[00000000]          mov     [resulti],rax
    50                                      ; display result
    51 0000007E 48BF-                       mov     rdi,fmtint
    51 00000080 [3500000000000000] 
    52 00000088 48BE-                       mov     rsi,difi
    52 0000008A [4800000000000000] 
    53 00000092 488B1425[00000000]          mov     rdx,[resulti]
    54 0000009A B800000000                  mov     rax,0
    55 0000009F E8(00000000)                call printf
    56                                      
    57                                      ; incrementing
    58 000000A4 488B0425[00000000]          mov     rax,[number1]
    59 000000AC 48FFC0                      inc     rax
    60 000000AF 48890425[00000000]          mov     [resulti],rax
    61                                      ; display result
    62 000000B7 48BF-                       mov     rdi,fmtint
    62 000000B9 [3500000000000000] 
    63 000000C1 48BE-                       mov     rsi,inci
    63 000000C3 [5A00000000000000] 
    64 000000CB 488B1425[00000000]          mov     rdx,[resulti]
    65 000000D3 B800000000                  mov     rax,0
    66 000000D8 E8(00000000)                call printf
    67                                      
    68                                      ; decrementing
    69 000000DD 488B0425[00000000]          mov     rax,[number1]
    70 000000E5 48FFC8                      dec     rax
    71 000000E8 48890425[00000000]          mov     [resulti],rax
    72                                      ; display result
    73 000000F0 48BF-                       mov     rdi,fmtint
    73 000000F2 [3500000000000000] 
    74 000000FA 48BE-                       mov     rsi,deci
    74 000000FC [7000000000000000] 
    75 00000104 488B1425[00000000]          mov     rdx,[resulti]
    76 0000010C B800000000                  mov     rax,0
    77 00000111 E8(00000000)                call printf
    78                                      
    79                                      ; shift arithmetic left
    80 00000116 488B0425[00000000]          mov     rax,[number1]
    81 0000011E 48C1E002                    sal     rax,2           ; multiplies by 4
    82 00000122 48890425[00000000]          mov     [resulti],rax
    83                                      ; display result
    84 0000012A 48BF-                       mov     rdi,fmtint
    84 0000012C [3500000000000000] 
    85 00000134 48BE-                       mov     rsi,sali
    85 00000136 [8600000000000000] 
    86 0000013E 488B1425[00000000]          mov     rdx,[resulti]
    87 00000146 B800000000                  mov     rax,0
    88 0000014B E8(00000000)                call printf
    89                                      
    90                                      ; shift arithmetic right
    91 00000150 488B0425[00000000]          mov     rax,[number1]
    92 00000158 48C1F802                    sar     rax,2           ; divides by 4
    93 0000015C 48890425[00000000]          mov     [resulti],rax
    94                                      ; display result
    95 00000164 48BF-                       mov     rdi,fmtint
    95 00000166 [3500000000000000] 
    96 0000016E 48BE-                       mov     rsi,sari
    96 00000170 [A200000000000000] 
    97 00000178 488B1425[00000000]          mov     rdx,[resulti]
    98 00000180 B800000000                  mov     rax,0
    99 00000185 E8(00000000)                call printf
   100                                      
   101                                      ; shift arithmetic right with sign extension
   102 0000018A 488B0425[10000000]          mov     rax,[neg_num]
   103 00000192 48C1F802                    sar     rax,2
   104 00000196 48890425[00000000]          mov     [resulti],rax
   105                                      ; display result
   106 0000019E 48BF-                       mov     rdi,fmtint
   106 000001A0 [3500000000000000] 
   107 000001A8 48BE-                       mov     rsi,sariex
   107 000001AA [BF00000000000000] 
   108 000001B2 488B1425[00000000]          mov     rdx,[resulti]
   109 000001BA B800000000                  mov     rax,0
   110 000001BF E8(00000000)                call printf
   111                                      
   112                                      ; multiplication
   113 000001C4 488B0425[00000000]          mov     rax,[number1]
   114 000001CC 48F72C25[08000000]          imul    qword [number2]     ; multiply rax with number2
   115 000001D4 48890425[00000000]          mov     [resulti],rax
   116                                      ; display result
   117 000001DC 48BF-                       mov     rdi,fmtint
   117 000001DE [3500000000000000] 
   118 000001E6 48BE-                       mov     rsi,multi
   118 000001E8 [F000000000000000] 
   119 000001F0 488B1425[00000000]          mov     rdx,[resulti]
   120 000001F8 B800000000                  mov     rax,0
   121 000001FD E8(00000000)                call printf
   122                                      
   123                                      ; division
   124 00000202 488B0425[00000000]          mov     rax,[number1]
   125 0000020A BA00000000                  mov     rdx,0
   126 0000020F 48F73C25[08000000]          idiv    qword [number2]     ; divide rax with number2, modulo in rdx
   127 00000217 48890425[00000000]          mov     [resulti],rax
   128 0000021F 48891425[08000000]          mov     [modulo],rdx        ; rdx to modulo
   129                                      ; display result
   130 00000227 48BF-                       mov     rdi,fmtint
   130 00000229 [3500000000000000] 
   131 00000231 48BE-                       mov     rsi,divi
   131 00000233 [FF00000000000000] 
   132 0000023B 488B1425[00000000]          mov     rdx,[resulti]
   133 00000243 B800000000                  mov     rax,0
   134 00000248 E8(00000000)                call printf
   135 0000024D 48BF-                       mov     rdi,fmtint
   135 0000024F [3500000000000000] 
   136 00000257 48BE-                       mov     rsi,remi
   136 00000259 [1701000000000000] 
   137 00000261 488B1425[08000000]          mov     rdx,[modulo]
   138 00000269 B800000000                  mov     rax,0
   139 0000026E E8(00000000)                call printf
   140                                      
   141 00000273 4889E5                      mov     rbp,rsp
   142 00000276 5D                          pop     rbp
   143 00000277 C3                          ret    
