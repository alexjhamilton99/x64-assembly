     1                                  ; move.asm
     2                                  section .data
     3 00000000 7B                      	bNum	db	123
     4 00000001 3930                    	wNum	dw	12345
     5 00000003 D2029649                	dNum	dd	1234567890
     6 00000007 1581E97DF4102211        	qNum1	dq	1234567890123456789
     7 0000000F 40E2010000000000        	qNum2	dq	123456
     8 00000017 1F85EB51B81E0940        	qNum3	dq	3.14
     9                                  section .bss
    10                                  section .text
    11                                  	global main
    12                                  main:
    13 00000000 55                      	push rbp
    14 00000001 4889E5                  	mov rbp, rsp		
    15 00000004 48C7C0FFFFFFFF          	mov rax, -1		; fill rax with 1's
    16 0000000B 8A0425[00000000]        	mov al, byte [bNum]	; doesn't clear rax's upper bits
    17 00000012 4831C0                  	xor rax, rax		; clear rax
    18 00000015 8A0425[00000000]        	mov al, byte [bNum]	; now rax has the correct value
    19                                  	
    20 0000001C 48C7C0FFFFFFFF          	mov rax, -1		; fill rax with 1's
    21 00000023 668B0425[01000000]      	mov ax, word [wNum]	; doesn't clear rax's upper bits
    22 0000002B 4831C0                  	xor rax, rax		; clear rax
    23 0000002E 668B0425[01000000]      	mov ax, word [wNum]	; now rax contains the correct value
    24                                  	
    25 00000036 48C7C0FFFFFFFF          	mov rax, -1		; fill rax with 1's
    26 0000003D 8B0425[03000000]        	mov eax, dWord [dNum]	; clears rax's upper bits
    27                                  	
    28 00000044 48C7C0FFFFFFFF          	mov rax, -1		; fill rax with 1's
    29 0000004B 488B0425[07000000]      	mov rax, qWord [qNum1]	; clears rax's upper bits
    30                                  	
    31 00000053 48890425[0F000000]      	mov qWord [qNum2], rax	; one operand always a register
    32 0000005B B840E20100              	mov rax, 123456		; source operands can be an immediate value
    33                                  	
    34 00000060 F30F7E0425-             	movq xmm0, [qNum3]	; special instruction for floating-point
    34 00000065 [17000000]         
    35 00000069 4889EC                  	mov rsp, rbp
    36 0000006C 5D                      	pop rbp
    37                                  
    38 0000006D C3                      ret	
